{
    "backend": {
        "video_bucket": "<string>: gcloud bucket name where videos are stored",
        "json_bucket": "<string>: gcloud bucket name where the Video API data should be stored",
        "typesense": {
            "active": "<boolean>: should typesense be used as a search index. If both typesense and algolia are active, this takes precedence",
            "host": "<string>: ip address pointing to the typesense server",
            "port": "<string>: port pertaining to the the server at the provided IP address",
            "api_key": "<string>: typesense api key for authorization",
            "index": "<string>: name to identify your search index"
        },
        "algolia": {
            "active": "<boolean>: should algolia be used as a search index. If both typesense and algolia are false, no search index will be used.",
            "app_id": "<string>: algolia app id obtained from the service",
            "admin_key": "<string>: algolia api key obtained from the service",
            "index": "<string>: name to identify your search index"
        }
    },
    "frontend": {
        "apiKey": "<string>: firebase application api key",
        "project_id": "<string>: firebase project id",
        "messagingSenderId": "<firebase>: firebase messaging sender id",
        "appId": "<string>: firebase app id",
        "measurementId": "<string>: firebase measurement id",
        "client_id": "<string>: firebase client id"
    }
}
